// -*- C++ -*-
// This is a header file generated with the command:
// makeCMS3ClassFiles("/home/users/phchang/public_html/analysis/vvv/VVVNanoLooper__/debug.root", "t", "VVVTree", "tas", "vvv")

#ifndef VVVTree_H
#define VVVTree_H

#include "Math/GenVector/PtEtaPhiM4D.h"
#include "Math/LorentzVector.h"
#include "Math/Point3D.h"
#include "TMath.h"
#include "TBranch.h"
#include "TTree.h"
#include "TH1F.h"
#include "TFile.h"
#include "TBits.h"
#include <vector> 
#include <unistd.h> 
typedef ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > LorentzVector;

using namespace std; 
class VVVTree {
 private: 
 protected: 
  unsigned int index;
  int      Common_isData_;
  TBranch *Common_isData_branch;
  bool     Common_isData_isLoaded;
  int      Common_run_;
  TBranch *Common_run_branch;
  bool     Common_run_isLoaded;
  int      Common_lumi_;
  TBranch *Common_lumi_branch;
  bool     Common_lumi_isLoaded;
  unsigned long long Common_evt_;
  TBranch *Common_evt_branch;
  bool     Common_evt_isLoaded;
  float    Common_genWeight_;
  TBranch *Common_genWeight_branch;
  bool     Common_genWeight_isLoaded;
  float    Common_btagWeight_DeepCSVB_;
  TBranch *Common_btagWeight_DeepCSVB_branch;
  bool     Common_btagWeight_DeepCSVB_isLoaded;
  vector<float> *Common_LHEWeight_mg_reweighting_;
  TBranch *Common_LHEWeight_mg_reweighting_branch;
  bool     Common_LHEWeight_mg_reweighting_isLoaded;
  bool     Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_;
  TBranch *Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_branch;
  bool     Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_isLoaded;
  bool     Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_;
  TBranch *Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_branch;
  bool     Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_isLoaded;
  bool     Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_;
  TBranch *Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_branch;
  bool     Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_isLoaded;
  bool     Common_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_;
  TBranch *Common_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_branch;
  bool     Common_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_isLoaded;
  bool     Common_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_;
  TBranch *Common_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_branch;
  bool     Common_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_isLoaded;
  bool     Common_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_;
  TBranch *Common_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_branch;
  bool     Common_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_isLoaded;
  bool     Common_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_;
  TBranch *Common_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_branch;
  bool     Common_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_isLoaded;
  bool     Common_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_;
  TBranch *Common_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_branch;
  bool     Common_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_isLoaded;
  bool     Common_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_;
  TBranch *Common_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_branch;
  bool     Common_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_isLoaded;
  bool     Common_HLT_DoubleEl_;
  TBranch *Common_HLT_DoubleEl_branch;
  bool     Common_HLT_DoubleEl_isLoaded;
  bool     Common_HLT_MuEG_;
  TBranch *Common_HLT_MuEG_branch;
  bool     Common_HLT_MuEG_isLoaded;
  bool     Common_HLT_DoubleMu_;
  TBranch *Common_HLT_DoubleMu_branch;
  bool     Common_HLT_DoubleMu_isLoaded;
  bool     Common_pass_duplicate_removal_ee_em_mm_;
  TBranch *Common_pass_duplicate_removal_ee_em_mm_branch;
  bool     Common_pass_duplicate_removal_ee_em_mm_isLoaded;
  bool     Common_pass_duplicate_removal_mm_em_ee_;
  TBranch *Common_pass_duplicate_removal_mm_em_ee_branch;
  bool     Common_pass_duplicate_removal_mm_em_ee_isLoaded;
  bool     Common_noiseFlag_;
  TBranch *Common_noiseFlag_branch;
  bool     Common_noiseFlag_isLoaded;
  bool     Common_noiseFlagMC_;
  TBranch *Common_noiseFlagMC_branch;
  bool     Common_noiseFlagMC_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > *Common_met_p4_;
  TBranch *Common_met_p4_branch;
  bool     Common_met_p4_isLoaded;
  float    Common_event_lepSF_;
  TBranch *Common_event_lepSF_branch;
  bool     Common_event_lepSF_isLoaded;
  float    Common_event_lepSFelup_;
  TBranch *Common_event_lepSFelup_branch;
  bool     Common_event_lepSFelup_isLoaded;
  float    Common_event_lepSFeldn_;
  TBranch *Common_event_lepSFeldn_branch;
  bool     Common_event_lepSFeldn_isLoaded;
  float    Common_event_lepSFmuup_;
  TBranch *Common_event_lepSFmuup_branch;
  bool     Common_event_lepSFmuup_isLoaded;
  float    Common_event_lepSFmudn_;
  TBranch *Common_event_lepSFmudn_branch;
  bool     Common_event_lepSFmudn_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > *Common_lep_p4_;
  TBranch *Common_lep_p4_branch;
  bool     Common_lep_p4_isLoaded;
  vector<int> *Common_lep_idxs_;
  TBranch *Common_lep_idxs_branch;
  bool     Common_lep_idxs_isLoaded;
  vector<int> *Common_lep_pdgid_;
  TBranch *Common_lep_pdgid_branch;
  bool     Common_lep_pdgid_isLoaded;
  vector<int> *Common_lep_tight_;
  TBranch *Common_lep_tight_branch;
  bool     Common_lep_tight_isLoaded;
  vector<float> *Common_lep_dxy_;
  TBranch *Common_lep_dxy_branch;
  bool     Common_lep_dxy_isLoaded;
  vector<float> *Common_lep_dz_;
  TBranch *Common_lep_dz_branch;
  bool     Common_lep_dz_isLoaded;
  vector<float> *Common_lep_SF_;
  TBranch *Common_lep_SF_branch;
  bool     Common_lep_SF_isLoaded;
  vector<float> *Common_lep_SFTight_;
  TBranch *Common_lep_SFTight_branch;
  bool     Common_lep_SFTight_isLoaded;
  vector<float> *Common_lep_SFdn_;
  TBranch *Common_lep_SFdn_branch;
  bool     Common_lep_SFdn_isLoaded;
  vector<float> *Common_lep_SFdnTight_;
  TBranch *Common_lep_SFdnTight_branch;
  bool     Common_lep_SFdnTight_isLoaded;
  vector<float> *Common_lep_SFup_;
  TBranch *Common_lep_SFup_branch;
  bool     Common_lep_SFup_isLoaded;
  vector<float> *Common_lep_SFupTight_;
  TBranch *Common_lep_SFupTight_branch;
  bool     Common_lep_SFupTight_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > *Common_jet_p4_;
  TBranch *Common_jet_p4_branch;
  bool     Common_jet_p4_isLoaded;
  vector<int> *Common_jet_idxs_;
  TBranch *Common_jet_idxs_branch;
  bool     Common_jet_idxs_isLoaded;
  vector<bool> *Common_jet_passBloose_;
  TBranch *Common_jet_passBloose_branch;
  bool     Common_jet_passBloose_isLoaded;
  vector<bool> *Common_jet_passBmedium_;
  TBranch *Common_jet_passBmedium_branch;
  bool     Common_jet_passBmedium_isLoaded;
  vector<bool> *Common_jet_passBtight_;
  TBranch *Common_jet_passBtight_branch;
  bool     Common_jet_passBtight_isLoaded;
  vector<int> *Common_jet_overlapfatjet_;
  TBranch *Common_jet_overlapfatjet_branch;
  bool     Common_jet_overlapfatjet_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > *Common_fatjet_p4_;
  TBranch *Common_fatjet_p4_branch;
  bool     Common_fatjet_p4_isLoaded;
  vector<int> *Common_fatjet_idxs_;
  TBranch *Common_fatjet_idxs_branch;
  bool     Common_fatjet_idxs_isLoaded;
  vector<float> *Common_fatjet_msoftdrop_;
  TBranch *Common_fatjet_msoftdrop_branch;
  bool     Common_fatjet_msoftdrop_isLoaded;
  vector<float> *Common_fatjet_deepMD_W_;
  TBranch *Common_fatjet_deepMD_W_branch;
  bool     Common_fatjet_deepMD_W_isLoaded;
  vector<float> *Common_fatjet_deep_W_;
  TBranch *Common_fatjet_deep_W_branch;
  bool     Common_fatjet_deep_W_isLoaded;
  vector<float> *Common_fatjet_deepMD_Z_;
  TBranch *Common_fatjet_deepMD_Z_branch;
  bool     Common_fatjet_deepMD_Z_isLoaded;
  vector<float> *Common_fatjet_deep_Z_;
  TBranch *Common_fatjet_deep_Z_branch;
  bool     Common_fatjet_deep_Z_isLoaded;
  vector<float> *Common_fatjet_deepMD_T_;
  TBranch *Common_fatjet_deepMD_T_branch;
  bool     Common_fatjet_deepMD_T_isLoaded;
  vector<float> *Common_fatjet_deep_T_;
  TBranch *Common_fatjet_deep_T_branch;
  bool     Common_fatjet_deep_T_isLoaded;
  vector<float> *Common_fatjet_deepMD_bb_;
  TBranch *Common_fatjet_deepMD_bb_branch;
  bool     Common_fatjet_deepMD_bb_isLoaded;
  vector<float> *Common_fatjet_tau3_;
  TBranch *Common_fatjet_tau3_branch;
  bool     Common_fatjet_tau3_isLoaded;
  vector<float> *Common_fatjet_tau2_;
  TBranch *Common_fatjet_tau2_branch;
  bool     Common_fatjet_tau2_isLoaded;
  vector<float> *Common_fatjet_tau1_;
  TBranch *Common_fatjet_tau1_branch;
  bool     Common_fatjet_tau1_isLoaded;
  vector<float> *Common_fatjet_tau32_;
  TBranch *Common_fatjet_tau32_branch;
  bool     Common_fatjet_tau32_isLoaded;
  vector<float> *Common_fatjet_tau21_;
  TBranch *Common_fatjet_tau21_branch;
  bool     Common_fatjet_tau21_isLoaded;
  vector<float> *Common_fatjet_subjet0_pt_;
  TBranch *Common_fatjet_subjet0_pt_branch;
  bool     Common_fatjet_subjet0_pt_isLoaded;
  vector<float> *Common_fatjet_subjet0_eta_;
  TBranch *Common_fatjet_subjet0_eta_branch;
  bool     Common_fatjet_subjet0_eta_isLoaded;
  vector<float> *Common_fatjet_subjet0_phi_;
  TBranch *Common_fatjet_subjet0_phi_branch;
  bool     Common_fatjet_subjet0_phi_isLoaded;
  vector<float> *Common_fatjet_subjet0_mass_;
  TBranch *Common_fatjet_subjet0_mass_branch;
  bool     Common_fatjet_subjet0_mass_isLoaded;
  vector<float> *Common_fatjet_subjet1_pt_;
  TBranch *Common_fatjet_subjet1_pt_branch;
  bool     Common_fatjet_subjet1_pt_isLoaded;
  vector<float> *Common_fatjet_subjet1_eta_;
  TBranch *Common_fatjet_subjet1_eta_branch;
  bool     Common_fatjet_subjet1_eta_isLoaded;
  vector<float> *Common_fatjet_subjet1_phi_;
  TBranch *Common_fatjet_subjet1_phi_branch;
  bool     Common_fatjet_subjet1_phi_isLoaded;
  vector<float> *Common_fatjet_subjet1_mass_;
  TBranch *Common_fatjet_subjet1_mass_branch;
  bool     Common_fatjet_subjet1_mass_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > *Common_fatjet_subjet0_p4_;
  TBranch *Common_fatjet_subjet0_p4_branch;
  bool     Common_fatjet_subjet0_p4_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > *Common_fatjet_subjet1_p4_;
  TBranch *Common_fatjet_subjet1_p4_branch;
  bool     Common_fatjet_subjet1_p4_isLoaded;
  vector<int> *Common_fatjet_WP_;
  TBranch *Common_fatjet_WP_branch;
  bool     Common_fatjet_WP_isLoaded;
  vector<int> *Common_fatjet_WP_antimasscut_;
  TBranch *Common_fatjet_WP_antimasscut_branch;
  bool     Common_fatjet_WP_antimasscut_isLoaded;
  vector<float> *Common_fatjet_SFVLoose_;
  TBranch *Common_fatjet_SFVLoose_branch;
  bool     Common_fatjet_SFVLoose_isLoaded;
  vector<float> *Common_fatjet_SFLoose_;
  TBranch *Common_fatjet_SFLoose_branch;
  bool     Common_fatjet_SFLoose_isLoaded;
  vector<float> *Common_fatjet_SFMedium_;
  TBranch *Common_fatjet_SFMedium_branch;
  bool     Common_fatjet_SFMedium_isLoaded;
  vector<float> *Common_fatjet_SFTight_;
  TBranch *Common_fatjet_SFTight_branch;
  bool     Common_fatjet_SFTight_isLoaded;
  vector<float> *Common_fatjet_SFdnVLoose_;
  TBranch *Common_fatjet_SFdnVLoose_branch;
  bool     Common_fatjet_SFdnVLoose_isLoaded;
  vector<float> *Common_fatjet_SFdnLoose_;
  TBranch *Common_fatjet_SFdnLoose_branch;
  bool     Common_fatjet_SFdnLoose_isLoaded;
  vector<float> *Common_fatjet_SFdnMedium_;
  TBranch *Common_fatjet_SFdnMedium_branch;
  bool     Common_fatjet_SFdnMedium_isLoaded;
  vector<float> *Common_fatjet_SFdnTight_;
  TBranch *Common_fatjet_SFdnTight_branch;
  bool     Common_fatjet_SFdnTight_isLoaded;
  vector<float> *Common_fatjet_SFupVLoose_;
  TBranch *Common_fatjet_SFupVLoose_branch;
  bool     Common_fatjet_SFupVLoose_isLoaded;
  vector<float> *Common_fatjet_SFupLoose_;
  TBranch *Common_fatjet_SFupLoose_branch;
  bool     Common_fatjet_SFupLoose_isLoaded;
  vector<float> *Common_fatjet_SFupMedium_;
  TBranch *Common_fatjet_SFupMedium_branch;
  bool     Common_fatjet_SFupMedium_isLoaded;
  vector<float> *Common_fatjet_SFupTight_;
  TBranch *Common_fatjet_SFupTight_branch;
  bool     Common_fatjet_SFupTight_isLoaded;
  float    Common_eventweight_fatjet_SFVLoose_;
  TBranch *Common_eventweight_fatjet_SFVLoose_branch;
  bool     Common_eventweight_fatjet_SFVLoose_isLoaded;
  float    Common_eventweight_fatjet_SFLoose_;
  TBranch *Common_eventweight_fatjet_SFLoose_branch;
  bool     Common_eventweight_fatjet_SFLoose_isLoaded;
  float    Common_eventweight_fatjet_SFMedium_;
  TBranch *Common_eventweight_fatjet_SFMedium_branch;
  bool     Common_eventweight_fatjet_SFMedium_isLoaded;
  float    Common_eventweight_fatjet_SFTight_;
  TBranch *Common_eventweight_fatjet_SFTight_branch;
  bool     Common_eventweight_fatjet_SFTight_isLoaded;
  float    Common_eventweight_fatjet_SFdnVLoose_;
  TBranch *Common_eventweight_fatjet_SFdnVLoose_branch;
  bool     Common_eventweight_fatjet_SFdnVLoose_isLoaded;
  float    Common_eventweight_fatjet_SFdnLoose_;
  TBranch *Common_eventweight_fatjet_SFdnLoose_branch;
  bool     Common_eventweight_fatjet_SFdnLoose_isLoaded;
  float    Common_eventweight_fatjet_SFdnMedium_;
  TBranch *Common_eventweight_fatjet_SFdnMedium_branch;
  bool     Common_eventweight_fatjet_SFdnMedium_isLoaded;
  float    Common_eventweight_fatjet_SFdnTight_;
  TBranch *Common_eventweight_fatjet_SFdnTight_branch;
  bool     Common_eventweight_fatjet_SFdnTight_isLoaded;
  float    Common_eventweight_fatjet_SFupVLoose_;
  TBranch *Common_eventweight_fatjet_SFupVLoose_branch;
  bool     Common_eventweight_fatjet_SFupVLoose_isLoaded;
  float    Common_eventweight_fatjet_SFupLoose_;
  TBranch *Common_eventweight_fatjet_SFupLoose_branch;
  bool     Common_eventweight_fatjet_SFupLoose_isLoaded;
  float    Common_eventweight_fatjet_SFupMedium_;
  TBranch *Common_eventweight_fatjet_SFupMedium_branch;
  bool     Common_eventweight_fatjet_SFupMedium_isLoaded;
  float    Common_eventweight_fatjet_SFupTight_;
  TBranch *Common_eventweight_fatjet_SFupTight_branch;
  bool     Common_eventweight_fatjet_SFupTight_isLoaded;
  int      Common_nb_loose_;
  TBranch *Common_nb_loose_branch;
  bool     Common_nb_loose_isLoaded;
  int      Common_nb_medium_;
  TBranch *Common_nb_medium_branch;
  bool     Common_nb_medium_isLoaded;
  int      Common_nb_tight_;
  TBranch *Common_nb_tight_branch;
  bool     Common_nb_tight_isLoaded;
  vector<int> *Common_gen_idx_;
  TBranch *Common_gen_idx_branch;
  bool     Common_gen_idx_isLoaded;
  vector<int> *Common_gen_mother_idx_;
  TBranch *Common_gen_mother_idx_branch;
  bool     Common_gen_mother_idx_isLoaded;
  vector<int> *Common_gen_mother_id_;
  TBranch *Common_gen_mother_id_branch;
  bool     Common_gen_mother_id_isLoaded;
  vector<int> *Common_gen_pdgid_;
  TBranch *Common_gen_pdgid_branch;
  bool     Common_gen_pdgid_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > *Common_gen_p4s_;
  TBranch *Common_gen_p4s_branch;
  bool     Common_gen_p4s_isLoaded;
  vector<int> *Common_gen_vvvdecay_idx_;
  TBranch *Common_gen_vvvdecay_idx_branch;
  bool     Common_gen_vvvdecay_idx_isLoaded;
  vector<int> *Common_gen_vvvdecay_mother_idx_;
  TBranch *Common_gen_vvvdecay_mother_idx_branch;
  bool     Common_gen_vvvdecay_mother_idx_isLoaded;
  vector<int> *Common_gen_vvvdecay_mother_id_;
  TBranch *Common_gen_vvvdecay_mother_id_branch;
  bool     Common_gen_vvvdecay_mother_id_isLoaded;
  vector<int> *Common_gen_vvvdecay_pdgid_;
  TBranch *Common_gen_vvvdecay_pdgid_branch;
  bool     Common_gen_vvvdecay_pdgid_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > *Common_gen_vvvdecay_p4s_;
  TBranch *Common_gen_vvvdecay_p4s_branch;
  bool     Common_gen_vvvdecay_p4s_isLoaded;
  vector<int> *Common_gen_vvvdecay_taudecayid_;
  TBranch *Common_gen_vvvdecay_taudecayid_branch;
  bool     Common_gen_vvvdecay_taudecayid_isLoaded;
  int      Common_n_W_;
  TBranch *Common_n_W_branch;
  bool     Common_n_W_isLoaded;
  int      Common_n_Z_;
  TBranch *Common_n_Z_branch;
  bool     Common_n_Z_isLoaded;
  int      Common_n_lep_Z_;
  TBranch *Common_n_lep_Z_branch;
  bool     Common_n_lep_Z_isLoaded;
  int      Common_n_leptau_Z_;
  TBranch *Common_n_leptau_Z_branch;
  bool     Common_n_leptau_Z_isLoaded;
  int      Common_n_hadtau_Z_;
  TBranch *Common_n_hadtau_Z_branch;
  bool     Common_n_hadtau_Z_isLoaded;
  int      Common_n_nu_Z_;
  TBranch *Common_n_nu_Z_branch;
  bool     Common_n_nu_Z_isLoaded;
  int      Common_n_b_Z_;
  TBranch *Common_n_b_Z_branch;
  bool     Common_n_b_Z_isLoaded;
  int      Common_n_lep_W_;
  TBranch *Common_n_lep_W_branch;
  bool     Common_n_lep_W_isLoaded;
  int      Common_n_leptau_W_;
  TBranch *Common_n_leptau_W_branch;
  bool     Common_n_leptau_W_isLoaded;
  int      Common_n_hadtau_W_;
  TBranch *Common_n_hadtau_W_branch;
  bool     Common_n_hadtau_W_isLoaded;
  bool     Common_haslepWSS_;
  TBranch *Common_haslepWSS_branch;
  bool     Common_haslepWSS_isLoaded;
  float    Common_genHT_;
  TBranch *Common_genHT_branch;
  bool     Common_genHT_isLoaded;
  int      Common_gen_n_light_lep_;
  TBranch *Common_gen_n_light_lep_branch;
  bool     Common_gen_n_light_lep_isLoaded;
  bool     Cut_4LepMET_Preselection_;
  TBranch *Cut_4LepMET_Preselection_branch;
  bool     Cut_4LepMET_Preselection_isLoaded;
  bool     Cut_4LepMET_emuChannel_;
  TBranch *Cut_4LepMET_emuChannel_branch;
  bool     Cut_4LepMET_emuChannel_isLoaded;
  bool     Cut_4LepMET_offzChannel_;
  TBranch *Cut_4LepMET_offzChannel_branch;
  bool     Cut_4LepMET_offzChannel_isLoaded;
  bool     Cut_4LepMET_onzChannel_;
  TBranch *Cut_4LepMET_onzChannel_branch;
  bool     Cut_4LepMET_onzChannel_isLoaded;
  bool     Cut_4LepMET_onzChannel_HighMET_;
  TBranch *Cut_4LepMET_onzChannel_HighMET_branch;
  bool     Cut_4LepMET_onzChannel_HighMET_isLoaded;
  int      Var_4LepMET_Zcand_lep_idx_0_;
  TBranch *Var_4LepMET_Zcand_lep_idx_0_branch;
  bool     Var_4LepMET_Zcand_lep_idx_0_isLoaded;
  int      Var_4LepMET_Zcand_lep_pdgid_0_;
  TBranch *Var_4LepMET_Zcand_lep_pdgid_0_branch;
  bool     Var_4LepMET_Zcand_lep_pdgid_0_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > *Var_4LepMET_Zcand_lep_p4_0_;
  TBranch *Var_4LepMET_Zcand_lep_p4_0_branch;
  bool     Var_4LepMET_Zcand_lep_p4_0_isLoaded;
  int      Var_4LepMET_Zcand_lep_idx_1_;
  TBranch *Var_4LepMET_Zcand_lep_idx_1_branch;
  bool     Var_4LepMET_Zcand_lep_idx_1_isLoaded;
  int      Var_4LepMET_Zcand_lep_pdgid_1_;
  TBranch *Var_4LepMET_Zcand_lep_pdgid_1_branch;
  bool     Var_4LepMET_Zcand_lep_pdgid_1_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > *Var_4LepMET_Zcand_lep_p4_1_;
  TBranch *Var_4LepMET_Zcand_lep_p4_1_branch;
  bool     Var_4LepMET_Zcand_lep_p4_1_isLoaded;
  float    Var_4LepMET_Zcand_mll_;
  TBranch *Var_4LepMET_Zcand_mll_branch;
  bool     Var_4LepMET_Zcand_mll_isLoaded;
  int      Var_4LepMET_other_lep_idx_0_;
  TBranch *Var_4LepMET_other_lep_idx_0_branch;
  bool     Var_4LepMET_other_lep_idx_0_isLoaded;
  int      Var_4LepMET_other_lep_pdgid_0_;
  TBranch *Var_4LepMET_other_lep_pdgid_0_branch;
  bool     Var_4LepMET_other_lep_pdgid_0_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > *Var_4LepMET_other_lep_p4_0_;
  TBranch *Var_4LepMET_other_lep_p4_0_branch;
  bool     Var_4LepMET_other_lep_p4_0_isLoaded;
  int      Var_4LepMET_other_lep_idx_1_;
  TBranch *Var_4LepMET_other_lep_idx_1_branch;
  bool     Var_4LepMET_other_lep_idx_1_isLoaded;
  int      Var_4LepMET_other_lep_pdgid_1_;
  TBranch *Var_4LepMET_other_lep_pdgid_1_branch;
  bool     Var_4LepMET_other_lep_pdgid_1_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > *Var_4LepMET_other_lep_p4_1_;
  TBranch *Var_4LepMET_other_lep_p4_1_branch;
  bool     Var_4LepMET_other_lep_p4_1_isLoaded;
  float    Var_4LepMET_other_mll_;
  TBranch *Var_4LepMET_other_mll_branch;
  bool     Var_4LepMET_other_mll_isLoaded;
public: 
void Init(TTree *tree);
void GetEntry(unsigned int idx); 
void LoadAllBranches(); 
  const int &Common_isData();
  const int &Common_run();
  const int &Common_lumi();
  const unsigned long long &Common_evt();
  const float &Common_genWeight();
  const float &Common_btagWeight_DeepCSVB();
  const vector<float> &Common_LHEWeight_mg_reweighting();
  const bool &Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ();
  const bool &Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL();
  const bool &Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8();
  const bool &Common_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ();
  const bool &Common_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL();
  const bool &Common_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ();
  const bool &Common_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL();
  const bool &Common_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ();
  const bool &Common_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL();
  const bool &Common_HLT_DoubleEl();
  const bool &Common_HLT_MuEG();
  const bool &Common_HLT_DoubleMu();
  const bool &Common_pass_duplicate_removal_ee_em_mm();
  const bool &Common_pass_duplicate_removal_mm_em_ee();
  const bool &Common_noiseFlag();
  const bool &Common_noiseFlagMC();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &Common_met_p4();
  const float &Common_event_lepSF();
  const float &Common_event_lepSFelup();
  const float &Common_event_lepSFeldn();
  const float &Common_event_lepSFmuup();
  const float &Common_event_lepSFmudn();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_lep_p4();
  const vector<int> &Common_lep_idxs();
  const vector<int> &Common_lep_pdgid();
  const vector<int> &Common_lep_tight();
  const vector<float> &Common_lep_dxy();
  const vector<float> &Common_lep_dz();
  const vector<float> &Common_lep_SF();
  const vector<float> &Common_lep_SFTight();
  const vector<float> &Common_lep_SFdn();
  const vector<float> &Common_lep_SFdnTight();
  const vector<float> &Common_lep_SFup();
  const vector<float> &Common_lep_SFupTight();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_jet_p4();
  const vector<int> &Common_jet_idxs();
  const vector<bool> &Common_jet_passBloose();
  const vector<bool> &Common_jet_passBmedium();
  const vector<bool> &Common_jet_passBtight();
  const vector<int> &Common_jet_overlapfatjet();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_fatjet_p4();
  const vector<int> &Common_fatjet_idxs();
  const vector<float> &Common_fatjet_msoftdrop();
  const vector<float> &Common_fatjet_deepMD_W();
  const vector<float> &Common_fatjet_deep_W();
  const vector<float> &Common_fatjet_deepMD_Z();
  const vector<float> &Common_fatjet_deep_Z();
  const vector<float> &Common_fatjet_deepMD_T();
  const vector<float> &Common_fatjet_deep_T();
  const vector<float> &Common_fatjet_deepMD_bb();
  const vector<float> &Common_fatjet_tau3();
  const vector<float> &Common_fatjet_tau2();
  const vector<float> &Common_fatjet_tau1();
  const vector<float> &Common_fatjet_tau32();
  const vector<float> &Common_fatjet_tau21();
  const vector<float> &Common_fatjet_subjet0_pt();
  const vector<float> &Common_fatjet_subjet0_eta();
  const vector<float> &Common_fatjet_subjet0_phi();
  const vector<float> &Common_fatjet_subjet0_mass();
  const vector<float> &Common_fatjet_subjet1_pt();
  const vector<float> &Common_fatjet_subjet1_eta();
  const vector<float> &Common_fatjet_subjet1_phi();
  const vector<float> &Common_fatjet_subjet1_mass();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_fatjet_subjet0_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_fatjet_subjet1_p4();
  const vector<int> &Common_fatjet_WP();
  const vector<int> &Common_fatjet_WP_antimasscut();
  const vector<float> &Common_fatjet_SFVLoose();
  const vector<float> &Common_fatjet_SFLoose();
  const vector<float> &Common_fatjet_SFMedium();
  const vector<float> &Common_fatjet_SFTight();
  const vector<float> &Common_fatjet_SFdnVLoose();
  const vector<float> &Common_fatjet_SFdnLoose();
  const vector<float> &Common_fatjet_SFdnMedium();
  const vector<float> &Common_fatjet_SFdnTight();
  const vector<float> &Common_fatjet_SFupVLoose();
  const vector<float> &Common_fatjet_SFupLoose();
  const vector<float> &Common_fatjet_SFupMedium();
  const vector<float> &Common_fatjet_SFupTight();
  const float &Common_eventweight_fatjet_SFVLoose();
  const float &Common_eventweight_fatjet_SFLoose();
  const float &Common_eventweight_fatjet_SFMedium();
  const float &Common_eventweight_fatjet_SFTight();
  const float &Common_eventweight_fatjet_SFdnVLoose();
  const float &Common_eventweight_fatjet_SFdnLoose();
  const float &Common_eventweight_fatjet_SFdnMedium();
  const float &Common_eventweight_fatjet_SFdnTight();
  const float &Common_eventweight_fatjet_SFupVLoose();
  const float &Common_eventweight_fatjet_SFupLoose();
  const float &Common_eventweight_fatjet_SFupMedium();
  const float &Common_eventweight_fatjet_SFupTight();
  const int &Common_nb_loose();
  const int &Common_nb_medium();
  const int &Common_nb_tight();
  const vector<int> &Common_gen_idx();
  const vector<int> &Common_gen_mother_idx();
  const vector<int> &Common_gen_mother_id();
  const vector<int> &Common_gen_pdgid();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_gen_p4s();
  const vector<int> &Common_gen_vvvdecay_idx();
  const vector<int> &Common_gen_vvvdecay_mother_idx();
  const vector<int> &Common_gen_vvvdecay_mother_id();
  const vector<int> &Common_gen_vvvdecay_pdgid();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_gen_vvvdecay_p4s();
  const vector<int> &Common_gen_vvvdecay_taudecayid();
  const int &Common_n_W();
  const int &Common_n_Z();
  const int &Common_n_lep_Z();
  const int &Common_n_leptau_Z();
  const int &Common_n_hadtau_Z();
  const int &Common_n_nu_Z();
  const int &Common_n_b_Z();
  const int &Common_n_lep_W();
  const int &Common_n_leptau_W();
  const int &Common_n_hadtau_W();
  const bool &Common_haslepWSS();
  const float &Common_genHT();
  const int &Common_gen_n_light_lep();
  const bool &Cut_4LepMET_Preselection();
  const bool &Cut_4LepMET_emuChannel();
  const bool &Cut_4LepMET_offzChannel();
  const bool &Cut_4LepMET_onzChannel();
  const bool &Cut_4LepMET_onzChannel_HighMET();
  const int &Var_4LepMET_Zcand_lep_idx_0();
  const int &Var_4LepMET_Zcand_lep_pdgid_0();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &Var_4LepMET_Zcand_lep_p4_0();
  const int &Var_4LepMET_Zcand_lep_idx_1();
  const int &Var_4LepMET_Zcand_lep_pdgid_1();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &Var_4LepMET_Zcand_lep_p4_1();
  const float &Var_4LepMET_Zcand_mll();
  const int &Var_4LepMET_other_lep_idx_0();
  const int &Var_4LepMET_other_lep_pdgid_0();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &Var_4LepMET_other_lep_p4_0();
  const int &Var_4LepMET_other_lep_idx_1();
  const int &Var_4LepMET_other_lep_pdgid_1();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &Var_4LepMET_other_lep_p4_1();
  const float &Var_4LepMET_other_mll();

  static void progress(int nEventsTotal, int nEventsChain);
};

#ifndef __CINT__
extern VVVTree vvv;
#endif

namespace tas {
  const int &Common_isData();
  const int &Common_run();
  const int &Common_lumi();
  const unsigned long long &Common_evt();
  const float &Common_genWeight();
  const float &Common_btagWeight_DeepCSVB();
  const vector<float> &Common_LHEWeight_mg_reweighting();
  const bool &Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ();
  const bool &Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL();
  const bool &Common_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8();
  const bool &Common_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ();
  const bool &Common_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL();
  const bool &Common_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ();
  const bool &Common_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL();
  const bool &Common_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ();
  const bool &Common_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL();
  const bool &Common_HLT_DoubleEl();
  const bool &Common_HLT_MuEG();
  const bool &Common_HLT_DoubleMu();
  const bool &Common_pass_duplicate_removal_ee_em_mm();
  const bool &Common_pass_duplicate_removal_mm_em_ee();
  const bool &Common_noiseFlag();
  const bool &Common_noiseFlagMC();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &Common_met_p4();
  const float &Common_event_lepSF();
  const float &Common_event_lepSFelup();
  const float &Common_event_lepSFeldn();
  const float &Common_event_lepSFmuup();
  const float &Common_event_lepSFmudn();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_lep_p4();
  const vector<int> &Common_lep_idxs();
  const vector<int> &Common_lep_pdgid();
  const vector<int> &Common_lep_tight();
  const vector<float> &Common_lep_dxy();
  const vector<float> &Common_lep_dz();
  const vector<float> &Common_lep_SF();
  const vector<float> &Common_lep_SFTight();
  const vector<float> &Common_lep_SFdn();
  const vector<float> &Common_lep_SFdnTight();
  const vector<float> &Common_lep_SFup();
  const vector<float> &Common_lep_SFupTight();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_jet_p4();
  const vector<int> &Common_jet_idxs();
  const vector<bool> &Common_jet_passBloose();
  const vector<bool> &Common_jet_passBmedium();
  const vector<bool> &Common_jet_passBtight();
  const vector<int> &Common_jet_overlapfatjet();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_fatjet_p4();
  const vector<int> &Common_fatjet_idxs();
  const vector<float> &Common_fatjet_msoftdrop();
  const vector<float> &Common_fatjet_deepMD_W();
  const vector<float> &Common_fatjet_deep_W();
  const vector<float> &Common_fatjet_deepMD_Z();
  const vector<float> &Common_fatjet_deep_Z();
  const vector<float> &Common_fatjet_deepMD_T();
  const vector<float> &Common_fatjet_deep_T();
  const vector<float> &Common_fatjet_deepMD_bb();
  const vector<float> &Common_fatjet_tau3();
  const vector<float> &Common_fatjet_tau2();
  const vector<float> &Common_fatjet_tau1();
  const vector<float> &Common_fatjet_tau32();
  const vector<float> &Common_fatjet_tau21();
  const vector<float> &Common_fatjet_subjet0_pt();
  const vector<float> &Common_fatjet_subjet0_eta();
  const vector<float> &Common_fatjet_subjet0_phi();
  const vector<float> &Common_fatjet_subjet0_mass();
  const vector<float> &Common_fatjet_subjet1_pt();
  const vector<float> &Common_fatjet_subjet1_eta();
  const vector<float> &Common_fatjet_subjet1_phi();
  const vector<float> &Common_fatjet_subjet1_mass();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_fatjet_subjet0_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_fatjet_subjet1_p4();
  const vector<int> &Common_fatjet_WP();
  const vector<int> &Common_fatjet_WP_antimasscut();
  const vector<float> &Common_fatjet_SFVLoose();
  const vector<float> &Common_fatjet_SFLoose();
  const vector<float> &Common_fatjet_SFMedium();
  const vector<float> &Common_fatjet_SFTight();
  const vector<float> &Common_fatjet_SFdnVLoose();
  const vector<float> &Common_fatjet_SFdnLoose();
  const vector<float> &Common_fatjet_SFdnMedium();
  const vector<float> &Common_fatjet_SFdnTight();
  const vector<float> &Common_fatjet_SFupVLoose();
  const vector<float> &Common_fatjet_SFupLoose();
  const vector<float> &Common_fatjet_SFupMedium();
  const vector<float> &Common_fatjet_SFupTight();
  const float &Common_eventweight_fatjet_SFVLoose();
  const float &Common_eventweight_fatjet_SFLoose();
  const float &Common_eventweight_fatjet_SFMedium();
  const float &Common_eventweight_fatjet_SFTight();
  const float &Common_eventweight_fatjet_SFdnVLoose();
  const float &Common_eventweight_fatjet_SFdnLoose();
  const float &Common_eventweight_fatjet_SFdnMedium();
  const float &Common_eventweight_fatjet_SFdnTight();
  const float &Common_eventweight_fatjet_SFupVLoose();
  const float &Common_eventweight_fatjet_SFupLoose();
  const float &Common_eventweight_fatjet_SFupMedium();
  const float &Common_eventweight_fatjet_SFupTight();
  const int &Common_nb_loose();
  const int &Common_nb_medium();
  const int &Common_nb_tight();
  const vector<int> &Common_gen_idx();
  const vector<int> &Common_gen_mother_idx();
  const vector<int> &Common_gen_mother_id();
  const vector<int> &Common_gen_pdgid();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_gen_p4s();
  const vector<int> &Common_gen_vvvdecay_idx();
  const vector<int> &Common_gen_vvvdecay_mother_idx();
  const vector<int> &Common_gen_vvvdecay_mother_id();
  const vector<int> &Common_gen_vvvdecay_pdgid();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Common_gen_vvvdecay_p4s();
  const vector<int> &Common_gen_vvvdecay_taudecayid();
  const int &Common_n_W();
  const int &Common_n_Z();
  const int &Common_n_lep_Z();
  const int &Common_n_leptau_Z();
  const int &Common_n_hadtau_Z();
  const int &Common_n_nu_Z();
  const int &Common_n_b_Z();
  const int &Common_n_lep_W();
  const int &Common_n_leptau_W();
  const int &Common_n_hadtau_W();
  const bool &Common_haslepWSS();
  const float &Common_genHT();
  const int &Common_gen_n_light_lep();
  const bool &Cut_4LepMET_Preselection();
  const bool &Cut_4LepMET_emuChannel();
  const bool &Cut_4LepMET_offzChannel();
  const bool &Cut_4LepMET_onzChannel();
  const bool &Cut_4LepMET_onzChannel_HighMET();
  const int &Var_4LepMET_Zcand_lep_idx_0();
  const int &Var_4LepMET_Zcand_lep_pdgid_0();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &Var_4LepMET_Zcand_lep_p4_0();
  const int &Var_4LepMET_Zcand_lep_idx_1();
  const int &Var_4LepMET_Zcand_lep_pdgid_1();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &Var_4LepMET_Zcand_lep_p4_1();
  const float &Var_4LepMET_Zcand_mll();
  const int &Var_4LepMET_other_lep_idx_0();
  const int &Var_4LepMET_other_lep_pdgid_0();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &Var_4LepMET_other_lep_p4_0();
  const int &Var_4LepMET_other_lep_idx_1();
  const int &Var_4LepMET_other_lep_pdgid_1();
  const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &Var_4LepMET_other_lep_p4_1();
  const float &Var_4LepMET_other_mll();
}
#endif
